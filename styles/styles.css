@charset "UTF-8";
/**
  Нормализация блочной модели
 */
*,
::before,
::after {
  box-sizing: border-box;
}

/**
   Убираем внутренние отступы слева тегам списков,
   у которых есть атрибут class
  */
:where(ul, ol):where([class]) {
  padding-left: 0;
}

/**
   Убираем внешние отступы body и двум другим тегам,
   у которых есть атрибут class
  */
body,
:where(blockquote, figure):where([class]) {
  margin: 0;
}

/**
   Убираем внешние отступы вертикали нужным тегам,
   у которых есть атрибут class
  */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
  margin-block: 0;
}

:where(dd[class]) {
  margin-left: 0;
}

:where(fieldset[class]) {
  margin-left: 0;
  padding: 0;
  border: none;
}

/**
   Убираем стандартный маркер маркированному списку,
   у которого есть атрибут class
  */
:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

/**
   Обнуляем вертикальные внешние отступы параграфа,
   объявляем локальную переменную для внешнего отступа вниз,
   чтобы избежать взаимодействие с более сложным селектором
  */
p {
  --paragraphMarginBottom: 24px;
  margin-block: 0;
}

/**
   Внешний отступ вниз для параграфа без атрибута class,
   который расположен не последним среди своих соседних элементов
  */
p:where(:not([class]):not(:last-child)) {
  margin-bottom: var(--paragraphMarginBottom);
}

/**
   Упрощаем работу с изображениями
  */
img {
  display: block;
  max-width: 100%;
}

/**
   Наследуем свойства шрифт для полей ввода
  */
input,
textarea,
select,
button {
  font: inherit;
}

html {
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  height: 100%;
}

/**
   Плавный скролл
  */
html,
:has(:target) {
  scroll-behavior: smooth;
}

body {
  /**
     Пригодится в большинстве ситуаций
     (когда, например, нужно будет "прижать" футер к низу сайта)
    */
  min-height: 100%;
  /**
     Унифицированный интерлиньяж
    */
  line-height: 1.5;
}

/**
   Приводим к единому цвету svg-элементы
  */
svg *[stroke] {
  stroke: currentColor;
}

/**
   Чиним баг задержки смены цвета при взаимодействии с svg-элементами
  */
svg * {
  transition-property: fill, stroke;
}

/**
   Удаляем все анимации и переходы для людей,
   которые предпочитают их не использовать
  */
@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
@font-face {
  font-family: "Inter";
  src: url("../fonts/Inter-Medium.woff2") format("woff2");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url("../fonts/Inter-Regular.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Inter";
  src: url("../fonts/Inter-Bold.woff2") format("woff2");
  font-weight: bold;
  font-style: normal;
  font-display: swap;
}
.container {
  max-width: 1190px;
  margin-inline: auto;
  padding-inline: 10px;
}

.visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  margin: -1px !important;
  border: 0 !important;
  padding: 0 !important;
  white-space: nowrap !important;
  -webkit-clip-path: inset(100%) !important;
          clip-path: inset(100%) !important;
  clip: rect(0 0 0 0) !important;
  overflow: hidden !important;
}

@media (max-width: 768px) {
  .hidden-mobile {
    display: none !important;
  }
}

body {
  font-size: clamp(16px, 1.25vw, 18px);
  font-family: "Inter", sans-serif;
  font-weight: 400;
  line-height: 1.2;
  color: #000000;
  background-color: #ffffff;
}

a,
button,
input,
svg * {
  transition-duration: 0.2s;
}

a {
  text-decoration: none;
  color: inherit;
}

h1,
h2,
h3,
h4 {
  font-weight: 500;
}

h1 {
  font-size: clamp(18px, 1.6666666667vw, 24px);
}

h2 {
  font-size: 16px;
}

h3 {
  font-size: 14px;
}

.header {
  margin-top: 34px;
}
.header__inner {
  display: flex;
  flex-direction: column;
  row-gap: 15px;
}
.header__top {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.header__top-description {
  font-size: 12px;
}
.header__top-login:hover {
  color: #ff4949;
}
.header__logo {
  display: flex;
  flex-direction: column;
}
.header__extra {
  display: flex;
  background-color: #ff4949;
  border-radius: 5px;
}
.header__extra-field {
  display: flex;
  justify-content: space-between;
  border-radius: 5px;
}
.header__extra:hover {
  color: #ff4949;
}

.field {
  width: 100%;
  margin: 0;
}
.field__input {
  font-size: 14px;
  flex-grow: 1;
  max-width: 100%;
  border: 3px solid #ff4949;
  border-radius: 5px;
  height: 44px;
  padding-inline: 31px;
  background-color: #ffffff;
  position: relative;
}
.field__input::-moz-placeholder {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  left: 111px;
  font-size: 14px;
}
.field__input::placeholder {
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  left: 111px;
  font-size: 14px;
}
.field__input:focus {
  outline: none;
}

.button {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 14px;
  background-color: #ff4949;
  border: 3px solid transparent;
  -moz-column-gap: 9px;
       column-gap: 9px;
  color: #ffffff;
  padding-left: 14px;
  padding-right: 22px;
  border-radius: 5px;
  cursor: pointer;
}
.button:hover {
  background-color: #ffffff;
  color: #000000;
  border: 3px solid #ff4949;
}/*# sourceMappingURL=styles.css.map */